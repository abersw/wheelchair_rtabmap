<launch>
  <arg name="localization" value="true"/>

  <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>

  <param name="robot_description" textfile="$(find wheelchair_description)/urdf/wheelchair_model_tof7.urdf" />

  <!-- ROS navigation stack move_base -->
<group ns="planner">
  <remap from="map" to="/rtabmap/grid_map"/>
  <remap from="move_base_simple/goal" to="/move_base_simple/goal"/>
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find wheelchair_control)/move_base/costmap_common.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find wheelchair_control)/move_base/costmap_common.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find wheelchair_control)/move_base/costmap_local.yaml" command="load" />
        <rosparam file="$(find wheelchair_control)/move_base/costmap_global_laser.yaml" command="load"/>
        <rosparam file="$(find wheelchair_control)/move_base/planner.yaml" command="load" />
    </node>
</group>






  <group ns="rtabmap">

    <!-- Use RGBD synchronization -->
    <!-- Here is a general example using a standalone nodelet, 
         but it is recommended to attach this nodelet to nodelet 
         manager of the camera to avoid topic serialization -->
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="screen">
      <remap from="rgb/image"       to="/zed_node/rgb/image_rect_color"/>
      <remap from="depth/image"     to="/zed_node/depth/depth_registered"/>
      <remap from="rgb/camera_info" to="/zed_node/rgb/camera_info"/>
      <remap from="rgbd_image"      to="rgbd_image"/> <!-- output -->
      
      <!-- Should be true for not synchronized camera topics 
           (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
      <param name="approx_sync"       value="true"/> 
    </node>

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="">
          <param if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
          <param if="$(arg localization)" name="Mem/InitWMWithAllNodes" type="string" value="true"/>
          <param name="frame_id" type="string" value="base_footprint"/>

          <param name="subscribe_depth" type="bool" value="false"/>
          <param name="subscribe_rgbd" type="bool" value="true"/>
          <param name="subscribe_scan" type="bool" value="true"/>

          <remap from="odom" to="/zed_node/odom"/>
          <remap from="scan" to="/scan"/>
          <remap from="rgbd_image" to="rgbd_image"/>

          <param name="queue_size" type="int" value="10000"/>

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/NeighborLinkRefining" type="string" value="true"/>
          <param name="RGBD/ProximityBySpace"     type="string" value="true"/>
          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          <param name="Grid/FromDepth"            type="string" value="false"/> <!-- occupancy grid from lidar -->
          <param name="Reg/Force3DoF"             type="string" value="true"/>
          <param name="Reg/Strategy"              type="string" value="1"/> <!-- 1=ICP -->
          
          <!-- ICP parameters -->
          <param name="Icp/VoxelSize"                 type="string" value="0.05"/>
          <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1"/>
    </node>
  </group>
</launch>